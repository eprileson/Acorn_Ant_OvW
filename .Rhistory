weights= Worker.start, data=count, family = binomial(link = "logit"))
visreg(prop.surv2)
change.mod <- glmmTMB(Worker.pop ~ Time*Source.pop + (1 | Col_Season),
data = count1, family = poisson(link = "log"))
diagnose(change.mod) #removed the interaction effect due to extremely large SD
summary(change.mod) #time = -1.31, urbanpop = 0.226, time*urbanpop = -0.172
Anova(change.mod, type = "III") #source pop = chisq = 0.71, p = 0.399
count$worker.prop[count$worker.prop==1] <- 0.999
head(count)
count <- read.csv("OvW_count.csv")
count$Source.pop <- as.factor(count$Source.pop)
count$Collection_date <- as.factor(count$Collection_date)
colnames(count) <- c("Colony_ID", "Source.pop", "Worker.start", "Worker.end", "Brood_count", "Col_Season")
count$Worker.loss <- (count$Worker.start - count$Worker.end) #make worker loss positive for count
count$worker.prop <- ((count$Worker.loss)/(count$Worker.start))
count$worker.prop[count$worker.prop==1] <- 0.9999999
head(count)
prop.surv <- glmmTMB(worker.prop ~ Source.pop  + (1 | Col_Season),
data=count, beta_family(link = "logit"))
diagnose(prop.surv)
simOutput3 <- simulateResiduals(fittedModel = prop.surv, plot = F)
plot(simOutput3)
plotResiduals(simOutput3)
prop.surv <- glmmTMB(worker.prop ~ Source.pop  + (1 | Col_Season),
data=count, family = beta_family(link = "logit"))
diagnose(prop.surv)
simOutput3 <- simulateResiduals(fittedModel = prop.surv, plot = F)
plot(simOutput3)
testOutliers(simOutput3, margin = c("both"), type = c("bootstrap"), plot = T) #outliers are not signf. here
qqnorm(prop.surv)
library(visreg)
visreg(prop.surv)
prop.surv <- glmmTMB(worker.prop ~ Source.pop  + (1 | Col_Season),
data=count, family = beta_family(link = "logit"), weights = Worker.start)
diagnose(prop.surv)
simOutput3 <- simulateResiduals(fittedModel = prop.surv, plot = F)
plot(simOutput3)
testOutliers(simOutput3, margin = c("both"), type = c("bootstrap"), plot = T) #outliers are not signf. here
testZeroInflation(simOutput3)
prop.surv3 <- glm(worker.prop ~ Source.pop + Col_Season,
data=count, family = quasibinomial(link = "logit"), weights = ~Worker.start)
prop.surv3 <- glm(worker.prop ~ Source.pop + Col_Season,
data=count, family = quasibinomial(link = "logit"), weights = Worker.start)
diagnose(prop.surv3)
simOutput3 <- simulateResiduals(fittedModel = prop.surv3, plot = F)
plot(simOutput3)
plot(prop.surv3)
change.em
summary(change.mod) #time = -1.31, urbanpop = 0.226, time*urbanpop = -0.172
simOutput3 <- simulateResiduals(fittedModel = prop.surv, plot = F)
plot(simOutput3)
prop.surv <- glmmTMB(worker.prop ~ Source.pop  + (1 | Col_Season),
data=count, family = beta_family(link = "logit"),
weights = ~Worker.start)
countOnes <- function(x) sum(x == 1)  # testing for number of 1s
testGeneric(simOutput3, summary = countOnes, alternative = "greater")
mod.control2 <- glmmTMBControl(optimizer=optim,
optArgs=list(method="BFGS"))
prop.surv <- glmmTMB(worker.prop ~ Source.pop  + (1 | Col_Season),
data=count, family = beta_family(link = "logit"), control = mod.control2
weights = Worker.start)
prop.surv <- glmmTMB(worker.prop ~ Source.pop  + (1 | Col_Season),
data=count, family = beta_family(link = "logit"), control = mod.control2,
weights = Worker.start)
diagnose(prop.surv)
simOutput3 <- simulateResiduals(fittedModel = prop.surv)
plot(simOutput3)
?getSimulations
getSimulations(prop.surv)
testQuantiles(simOutput3)
testCategorical(simulationOutput, catPred = count$worker.prop)
testCategorical(simOutput3, catPred = count$Source.pop)
count$worker.prop <- log(count$worker.prop)
prop.surv <- glmmTMB(worker.prop ~ Source.pop  + (1 | Col_Season),
data=count, family = beta_family(link = "logit"), control = mod.control2,
weights = Worker.start)
setwd("C:/Users/prile/Box/Research/AcornAntOverwintering2021/Acorn_Ant_OvW/Acorn_Ant_OvW/CCRT")
ccrt <- read.csv("ccrt.csv", header = TRUE)
setwd("C:/Users/prile/Box/Research/AcornAntOverwintering2021/Acorn_Ant_OvW/Acorn_Ant_OvW/scripts")
ccrt <- read.csv("ccrt.csv", header = TRUE)
class(ccrt$Treatment) #chr; change to factor, then recheck class and levels
ccrt$Collection_date <- as.factor(ccrt$Collection_date)
colnames(ccrt) <- c("Colony_ID", "Ind_ant", "Site", "Date", "CCRT_min", "Treatment", "Col_Season", "Worker_count")
head(ccrt)
ccrt$CCRT_sec <- ccrt$CCRT_min*60
ccrt$CCRT_sec <- round(ccrt$CCRT_sec, digits = 0)
#change column names to include seconds as new variable
colnames(ccrt) <- c("Colony_ID", "Ind_ant", "Site", "Date", "CCRT_min", "Treatment", "Col_Season", "Worker_count", "CCRT_sec")
class(ccrt$CCRT_sec)
ccrt$CCRT_sec <- as.integer(ccrt$CCRT_sec) #change ccrt_sec to integer
head(ccrt)
ccrt <- ccrt[-c(42,188:189,294,552:555),] #colony 6951 U, colony 5619, colony 5260, colony 7783
#FINAL MODEL following model comparison and diagnostics
mod_ccrt4 <- glmmTMB(CCRT_sec ~ Treatment + (1 | Colony_ID) + (1 | Col_Season),
data = ccrt, family = nbinom1(link = "log"))
library(glmmTMB)
library(ggeffects)
library(ggplot2)
mod_ccrt4 <- glmmTMB(CCRT_sec ~ Treatment + (1 | Colony_ID) + (1 | Col_Season),
data = ccrt, family = nbinom1(link = "log"))
diagnose(mod_ccrt4)
library(DHARMa) #use simulated diagnostic modeling since we have a glmm; works with both glmer and glmmTMB objects
simOutput2 <- simulateResiduals(fittedModel = mod_ccrt4, plot = F)
plot(simOutput2)  #less dispersion, so better family, but deviation still significant
summary(mod_ccrt4) #estimate: 0.0009777(greater than Rural), SE = 0.1676475
library(car)
Anova(mod_ccrt4, type = "III") #Treatment
library(emmeans)
bt_model <- emmeans(mod_ccrt4, pairwise ~ Treatment, transform = "response", adjust = "fdr")
summary(bt_model) #rural treatment estimate = 472 (SE = 89.8),
change.mod <- glmmTMB(Worker.pop ~ Time*Source.pop + (1 | Col_Season),
data = count1, family = poisson(link = "log"))
summary(change.mod) #time = -1.31, urbanpop = 4.177, time*urbanpop = -0.172
Anova(change.mod, type = "III") #source pop = chisq = 0.71, p = 0.399
change.em <- emmeans(change.mod, pairwise ~ Time*Source.pop, transform = "response", adjust = "fdr")
change.em
count1 <- read.csv("OvW_count.csv")
colnames(count1) <- c("ColonyID", "Source.pop", "Beginning", "End", "Brood_count","Collection_date")
count1$Source.pop <- as.factor(count1$Source.pop)
count1$Collection_date <- as.factor(count1$Collection_date)
colnames(count1) <- c("Colony_ID", "Source.pop", "Beginning", "End", "Brood_count", "Col_Season")
head(count1)
library(magrittr)
library(tidyr)
count1 <- count1 %>%
pivot_longer(c("Beginning", "End"), names_to = "Time", values_to = "Worker.pop")
change.mod <- glmmTMB(Worker.pop ~ Time*Source.pop + (1 | Col_Season),
data = count1, family = poisson(link = "log"))
summary(change.mod) #time = -1.31, urbanpop = 4.177, time*urbanpop = -0.172
Anova(change.mod, type = "III") #source pop = chisq = 0.71, p = 0.399
head(count1)
count1 <- read.csv("OvW_count.csv")
head(count1)
colnames(count1) <- c("ColonyID", "Source.pop", "Beginning", "End", "Brood_count","Collection_date")
count1$Source.pop <- as.factor(count1$Source.pop)
count1$Collection_date <- as.factor(count1$Collection_date)
head(count1)
head(count)
colnames(count1) <- c("Colony_ID", "Source.pop", "Beginning", "End", "Brood_count", "Col_Season")
count1 <- count1 %>%
pivot_longer(c("Beginning", "End"), names_to = "Time", values_to = "Worker.pop")
count1$Time <- as.factor(count1$Time)
head(count1)
change.mod <- glmmTMB(Worker.pop ~ Time*Source.pop + (1 | Col_Season),
data = count1, family = poisson(link = "log"))
summary(change.mod) #time = -1.31, urbanpop = 4.177, time*urbanpop = -0.172
Anova(change.mod, type = "III") #source pop = chisq = 0.71, p = 0.399
summary(bt_model) #rural treatment estimate = 472 (SE = 89.8),
bt_df <- bt_model$emmeans %>%
confint() %>%
as.data.frame()
upper.SEc <- c(644.2, 649.6)
lower.SEc <- c(507.8, 504.4)
my_colors1 <- c("cadetblue", "darkorange")
names(my_colors1) <- levels(col_means2$Treatment) #matches colors to Rural and Urban
ccrt <- read.csv("ccrt.csv", header = TRUE)
class(ccrt$Treatment) #chr; change to factor, then recheck class and levels
ccrt$Treatment <- as.factor(ccrt$Treatment)
ccrt$Collection_date <- as.factor(ccrt$Collection_date)
class(ccrt$Collection_date)
colnames(ccrt) <- c("Colony_ID", "Ind_ant", "Site", "Date", "CCRT_min", "Treatment", "Col_Season", "Worker_count")
head(ccrt)
ccrt$CCRT_sec <- ccrt$CCRT_min*60
ccrt$CCRT_sec <- round(ccrt$CCRT_sec, digits = 0)
#change column names to include seconds as new variable
colnames(ccrt) <- c("Colony_ID", "Ind_ant", "Site", "Date", "CCRT_min", "Treatment", "Col_Season", "Worker_count", "CCRT_sec")
class(ccrt$CCRT_sec)
ccrt$CCRT_sec <- as.integer(ccrt$CCRT_sec) #change ccrt_sec to integer
head(ccrt)
ccrt <- ccrt[-c(42,188:189,294,552:555),] #colony 6951 U, colony 5619, colony 5260, colony 7783
col_means2 <- aggregate(CCRT_sec ~ Colony_ID + Treatment+Col_Season+Site+Worker_count,
data = ccrt, mean)
col_means2$CCRT_sec <- round(col_means2$CCRT_sec, digits = 0) #round digits to nearest 0.5
mod_ccrt4 <- glmmTMB(CCRT_sec ~ Treatment + (1 | Colony_ID) + (1 | Col_Season),
data = ccrt, family = nbinom1(link = "log"))
summary(mod_ccrt4) #estimate: 0.0009777(greater than Rural), SE = 0.1676475
Anova(mod_ccrt4, type = "III") #Treatment
bt_model <- emmeans(mod_ccrt4, pairwise ~ Treatment, transform = "response", adjust = "fdr")
bt_df <- bt_model$emmeans %>%
confint() %>%
as.data.frame()
upper.SEc <- c(644.2, 649.6)
lower.SEc <- c(507.8, 504.4)
my_colors1 <- c("cadetblue", "darkorange")
names(my_colors1) <- levels(col_means2$Treatment) #matches colors to Rural and Urban
ggplot(bt_df, aes(x = Treatment, y = response))+
geom_point(colour = my_colors1, size = 7,
stat = 'summary', fun.y = 'mean')+
geom_errorbar(aes(ymin = lower.SEc, ymax = upper.SEc), #uses upper and lower CI
width=0.05, colour = my_colors1, fun.args = list(mult = 1))+
geom_jitter(data = col_means2, aes(x = Treatment, y = CCRT_sec),
width = 0.2, height = 0, size = 2, inherit.aes = FALSE)+
labs(y = "CCRT (sec)", x = "Source Population")+
theme_classic()+
theme(
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
ggplot(bt_df, aes(x = Treatment, y = response))+
geom_point(colour = my_colors1, size = 7,
stat = 'summary', fun.y = 'mean')+
geom_errorbar(aes(ymin = lower.SEc, ymax = upper.SEc), #uses upper and lower CI
width=0.05, colour = my_colors1, fun.args = list(mult = 1))+
geom_jitter(data = col_means2, aes(x = Treatment, y = CCRT_sec),
width = 0.2, height = 0, size = 2, inherit.aes = FALSE)+
labs(y = "CCRT (sec)", x = "Source Population")+
theme_classic()+
theme(
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
ggplot(bt_df, aes(x = Treatment, y = response))+
geom_point(colour = my_colors1, size = 7,
stat = 'summary', fun.y = 'mean')+
geom_errorbar(aes(ymin = lower.SEc, ymax = upper.SEc), #uses upper and lower CI
width=0.05, colour = my_colors1, fun.args = list(mult = 1))+
geom_jitter(data = col_means2, aes(x = Treatment, y = CCRT_sec),
width = 0.2, height = 0, size = 2, inherit.aes = FALSE)+
labs(y = "CCRT (sec)", x = "Source Population")+
theme_classic()+
theme(
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
setwd("C:/Users/prile/Box/Research/AcornAntOverwintering2021/Acorn_Ant_OvW/Acorn_Ant_OvW/scripts")
ctmax <- read.csv("OvW_ctmax.csv", header = TRUE)
ctmax$Treatment <- as.factor(ctmax$Treatment)
ctmax$Worker_count <- as.numeric(ctmax$Worker_count) #change to numeric
ctmax$Collection_date <- as.factor(ctmax$Collection_date)
colnames(ctmax) <- c("Colony_ID", "Ind_ant", "Site", "Date", "CTmax_C", "Treatment", "Col_Season", "Worker_count", "Winter_days")
head(ctmax)
ctmax <- ctmax[-c(11:12,216:219,345:347),] #2318, #3538, #7783
col_means <- aggregate(CTmax_C ~ Colony_ID + Treatment + Site + Col_Season,
data = ctmax, mean)
library(plyr)
col_means$CTmax_C <- round_any(col_means$CTmax_C, 0.5) #round digits to nearest 0.5
col_means2$Site <- as.factor(col_means2$Site)
mod4 <- glmmTMB(CTmax_C ~ Treatment + (1 | Colony_ID) + (1 | Col_Season),
data = ctmax)
summary(mod4) #urban est = 1.2796 deg C higher than Rural; SE = 0.5124
Anova(mod4, type = "III")  #chisq - Treatment = 6.24, p = 0.013, .ns.
ct_mod <- emmeans(mod4, pairwise ~ Treatment, transform = "response", adjust = "fdr")
ct_df <- ct_mod$emmeans %>%
confint() %>%
as.data.frame()
ct_mod
upper.SE <- c(45.468, 46.772)
lower.SE <- c(44.332, 45.628)
my_colors2 <- c("cadetblue", "darkorange")
names(my_colors2) <- levels(ctmax$Treatment)
ggplot(ct_df, aes(x = Treatment, y= emmean))+
geom_jitter(data = col_means, aes(x = Treatment, y = CTmax_C),
width = 0.2, height = 0, size = 2, inherit.aes = FALSE)+
geom_point(colour = my_colors2, size = 7)+
geom_errorbar(aes(ymin = lower.SE, ymax = upper.SE), #uses upper and lower CI
width=0.05, colour = my_colors2, fun.args = list(mult = 1))+
ylab(bquote(CT[max]*" °C"))+
xlab("Source Population")+
theme_classic()+
theme(
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
setwd("C:/Users/prile/Box/Research/AcornAntOverwintering2021/Acorn_Ant_OvW/Acorn_Ant_OvW/scripts")
count <- read.csv("OvW_count.csv")
count$Source.pop <- as.factor(count$Source.pop)
count$Collection_date <- as.factor(count$Collection_date)
colnames(count) <- c("Colony_ID", "Source.pop", "Worker.start", "Worker.end", "Brood_count", "Col_Season")
head(count)
count$Worker.loss <- (count$Worker.start - count$Worker.end) #make worker loss positive for count
count$worker.prop <- ((count$Worker.loss)/(count$Worker.start))
count$worker.prop[count$worker.prop==1] <- 0.9999999
prop.surv <- glmmTMB(worker.prop ~ Source.pop  + (1 | Col_Season),
data=count, family = beta_family(link = "logit"),
weights = Worker.start)
summary(prop.surv)
Anova(prop.surv, type = "III")
prop.graph <- ggpredict(prop.surv, terms = c("Source.pop"),
type = "fe",ci.lvl = 0.68, width=0.05, colour = my_colors3)
prop_em <- emmeans(prop.surv2, pairwise ~ Source.pop, transform = "response", adjust = "fdr")
prop_em <- emmeans(prop.surv, pairwise ~ Source.pop, transform = "response", adjust = "fdr")
prop_em
upper.SEp <- c(0.770, 0.8057)
lower.SEp <- c(0.732, 0.744)
prop_df <- prop_em$emmeans %>%
confint()%>%
as.data.frame()
ggplot(prop_df, aes(x = Source.pop, y = emmean))+
geom_point(colour = my_colors3, size = 7)+
geom_errorbar(aes(ymin = lower.SEp, ymax = upper.SEp), fun.data = 'mean_se',
width=0.05, colour = my_colors3, fun.args = list(mult = 1))+
labs(y="Proportional Worker Loss", x = "Source Population", tag = "B")+
theme_classic()+
theme(
title = element_text(size = 14),
plot.tag = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
ggplot(prop_df, aes(x = Source.pop, y = response))+
geom_point(colour = my_colors3, size = 7)+
geom_errorbar(aes(ymin = lower.SEp, ymax = upper.SEp), fun.data = 'mean_se',
width=0.05, colour = my_colors3, fun.args = list(mult = 1))+
labs(y="Proportional Worker Loss", x = "Source Population", tag = "B")+
theme_classic()+
theme(
title = element_text(size = 14),
plot.tag = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
upper.SEp <- c(0.7958, 0.8057)
lower.SEp <- c(0.732, 0.744)
ggplot(prop_df, aes(x = Source.pop, y = response))+
geom_point(colour = my_colors3, size = 7)+
geom_errorbar(aes(ymin = lower.SEp, ymax = upper.SEp), fun.data = 'mean_se',
width=0.05, colour = my_colors3, fun.args = list(mult = 1))+
labs(y="Proportional Worker Loss", x = "Source Population", tag = "B")+
theme_classic()+
theme(
title = element_text(size = 14),
plot.tag = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
prop.surv2 <- glmmTMB(worker.prop ~ Source.pop + (1 |Col_Season),
weights= Worker.start, data=count, family = binomial(link = "logit"))
summary(prop.surv2)
Anova(prop.surv2, type = "III")
prop_em <- emmeans(prop.surv2, pairwise ~ Source.pop, transform = "response", adjust = "fdr")
prop_em
prop.surv3 <- glm(worker.prop ~ Source.pop*Col_Season,
data=count, family = quasibinomial(link = "logit"),
weights = Worker.start)
summary(prop.surv3)
prop.surv3 <- glm(worker.prop ~ Source.pop + Col_Season,
data=count, family = quasibinomial(link = "logit"),
weights = Worker.start)
summary(prop.surv3)
Anova(prop.surv3, type = "III")
prop.graph <- ggpredict(prop.surv3, terms = c("Source.pop"),
type = "fe",ci.lvl = 0.68, width=0.05, colour = my_colors3)
plot(prop.graph) #basic modeled plot
prop.surv3 <- glm(worker.prop ~ Source.pop*Col_Season,
data=count, family = quasibinomial(link = "logit"),
weights = Worker.start)
summary(surv.mod)
summary(prop.surv3)
Anova(prop.surv3, type = "III")
setwd("C:/Users/prile/Box/Research/AcornAntOverwintering2021/Acorn_Ant_Ovw/Acorn_Ant_Ovw/scripts")
AA_MR <- read.csv("AA_MR_Summary_Stats.csv", header = TRUE)
AA_MR <- AA_MR[-c(7,15,38,44,64,71,120,126),]
AA_MR$Source.pop <- as.factor(AA_MR$Source.pop)
AA_MR$Collection_date <- as.factor(AA_MR$Collection_date)
colnames(AA_MR) <- c("Sec", "MeanMR", "MeanMR_RA", "Cor_SumMR", "Chamber", "ExpeDataFile", "DataLength", "StartIndex",
"Source.pop", "Colony_mass", "Colony_ID", "Test.Temp", "Q10", "Col_Season")
head(AA_MR)
AA_MR$Test.Temp <- as.factor(AA_MR$Test.Temp)
AA_MR1 <- AA_MR[!(AA_MR$Chamber ==8 | AA_MR$Colony_mass == 'NA'),]
AA_MR1$Log.10MeanMR <- log10(AA_MR1$MeanMR)
AA_MR1$Log.10Colony_mass <- log10(AA_MR1$Colony_mass)
mod_MR1 <- glmmTMB(Q10 ~ Log.10Colony_mass + Source.pop +
(1 | Col_Season), data = AA_MR1, family = gaussian(link = "identity"))
summary(mod_MR1) #Q10 model
Qmests <- emmeans(mod_MR1, pairwise~Log.10Colony_mass + Source.pop, adjust = "tukey")
summary(Qmests) #contrast = 0.174; rural = 1.22, urban = 1.40
plot_Qmod1 <- ggpredict(mod_MR1, terms = c("Log.10Colony_mass", "Source.pop"), ci.lvl = 0.95) #predicted values
plot(plot_Qmod1, show.title=F, facet = FALSE, alpha = 0.1, colors = c("cadet blue", "dark orange"))+
labs(y="Q10 Reaction Rate", x = "Colony Mass Log 10 (grams)", color = "Source Population")+
geom_smooth(se = TRUE, method = "lm")+
theme_classic()+
theme(
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
plot(plot_Qmod1, show.title=F, facet = FALSE, alpha = 0.1, colors = c("cadet blue", "dark orange"))+
labs(y= expression(paste(bquote(italic(Q[10]*"Reaction Rate")))), x = "Colony Mass Log 10 (grams)", color = "Source Population")+
geom_smooth(se = TRUE, method = "lm")+
theme_classic()+
theme(
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
plot(plot_Qmod1, show.title=F, facet = FALSE, alpha = 0.1, colors = c("cadet blue", "dark orange"))+
labs(y= expression(paste(italic("Q"))[10]*"Reaction Rate"), x = "Colony Mass Log 10 (grams)", color = "Source Population")+
geom_smooth(se = TRUE, method = "lm")+
theme_classic()+
theme(
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
plot(plot_Qmod1, show.title=F, facet = FALSE, alpha = 0.1, colors = c("cadet blue", "dark orange"))+
labs(y= expression(paste(italic("Q"))[10]*" Reaction Rate"), x = "Colony Mass Log 10 (grams)", color = "Source Population")+
geom_smooth(se = TRUE, method = "lm")+
theme_classic()+
theme(
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
simOutput3 <- simulateResiduals(fittedModel = prop.surv)
plot(simOutput3)
summary(change.mod) #time = -1.31, urbanpop = 4.177, time*urbanpop = -0.172
change.em
change_df <- change.em$emmeans %>%
confint()%>%
as.data.frame()
upper.SEg <- c(48.56, 13.22, 71.43, 16.41)
lower.SEg <- c(39.84, 10.58, 58.77, 13.19)
ggplot(change_df, aes(x = Time, y= rate))+
geom_point(color = my_colors4, size = 7)+
geom_errorbar(aes(ymin = lower.SEg, ymax = upper.SEg), color = my_colors4, fun.data = 'mean_se',
width=0.05, fun.args = list(mult = 1))+
labs(y="Worker Population", x = "Census Points", tag = "A")+
theme_classic()+
theme(
title = element_text(size = 14),
plot.tag = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
prop_em <- emmeans(prop.surv, pairwise ~ Source.pop, transform = "response", adjust = "fdr")
prop_em
upper.SEp <- c(0.7958, 0.8057)
lower.SEp <- c(0.732, 0.744)
ggplot(prop_df, aes(x = Source.pop, y = response))+
geom_point(colour = my_colors3, size = 7)+
geom_errorbar(aes(ymin = lower.SEp, ymax = upper.SEp), fun.data = 'mean_se',
width=0.05, colour = my_colors3, fun.args = list(mult = 1))+
labs(y="Proportional Worker Loss", x = "Source Population", tag = "B")+
theme_classic()+
theme(
title = element_text(size = 14),
plot.tag = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
Anova(prop.surv, type = "III")
summary(prop.surv)
plot_grid(change, prop, ncol = 2, nrow = 1,
rel_widths = c(.5, .5, .5))   #use 1028 x 555 px aspect ratio
library(cowplot)
plot_grid(change, prop, ncol = 2, nrow = 1,
rel_widths = c(.5, .5, .5))   #use 1028 x 555 px aspect ratio
prop <- ggplot(prop_df, aes(x = Source.pop, y = response))+
geom_point(colour = my_colors3, size = 7)+
geom_errorbar(aes(ymin = lower.SEp, ymax = upper.SEp), fun.data = 'mean_se',
width=0.05, colour = my_colors3, fun.args = list(mult = 1))+
labs(y="Proportional Worker Loss", x = "Source Population", tag = "B")+
theme_classic()+
theme(
title = element_text(size = 14),
plot.tag = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
change <- ggplot(change_df, aes(x = Time, y= rate))+
geom_point(color = my_colors4, size = 7)+
geom_errorbar(aes(ymin = lower.SEg, ymax = upper.SEg), color = my_colors4, fun.data = 'mean_se',
width=0.05, fun.args = list(mult = 1))+
labs(y="Worker Population", x = "Census Points", tag = "A")+
theme_classic()+
theme(
title = element_text(size = 14),
plot.tag = element_text(size = 16, hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
plot_grid(change, prop, ncol = 2, nrow = 1,
rel_widths = c(.5, .5, .5))   #use 1028 x 555 px aspect ratio
ggplot(count, aes(x = Source.pop, y = worker.prop, colour = Source.pop))+
geom_errorbar(stat = 'summary', fun.data = 'mean_se',
width=0.05, fun.args = list(mult = 1))+
geom_point(size = 7, stat = 'summary', fun.y = "mean")+
scale_colour_manual(values = c("cadetblue", "darkorange"))+
theme_classic()+
labs(y = "Proportion of Worker Loss", x = "Source Population")+
ggtitle('Proportion Worker Change')+
theme(
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 10)
)
plot(simOutput3)
simOutput3 <- simulateResiduals(fittedModel = prop.surv2)
plot(simOutput3)
simOutput3 <- simulateResiduals(fittedModel = prop.surv3)
plot(simOutput3)
prop.surv3 <- glm(worker.prop ~ Source.pop*Col_Season,
data=count, family = quasibinomial(link = "logit"),
weights = Worker.start)
simOutput3 <- simulateResiduals(fittedModel = prop.surv3)
diagnose(prop.surv3)
plot(prop.surv3)
prop.graph <- ggpredict(prop.surv, terms = c("Source.pop"),
type = "fe",ci.lvl = 0.68, width=0.05, colour = my_colors3)
plot(prop.graph) #basic modeled plot
prop.graph <- ggpredict(prop.surv2, terms = c("Source.pop"),
type = "fe",ci.lvl = 0.68, width=0.05, colour = my_colors3)
plot(prop.graph) #basic modeled plot
prop.graph <- ggpredict(prop.surv3, terms = c("Source.pop"),
type = "fe",ci.lvl = 0.68, width=0.05, colour = my_colors3)
plot(prop.graph) #basic modeled plot
summary(prop.surv3)
Anova(prop.surv3, type = "III")
